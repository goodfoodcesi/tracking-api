name: CI/CD

on: [ push ]

env:
  REGISTRY: ${{ secrets.REGISTRY }}
  REGISTRY_NAMESPACE: ${{ secrets.SCW_NAMESPACE }}
  IMAGE_NAME: ${{ github.event.repository.name }}

jobs:
  test:
  build-dev:
    needs: test
  build-prod:
    needs:
      - test
      - build-dev
  build-and-push:
    needs: test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to Scaleway Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: nologin
          password: ${{ secrets.SCW_SECRET_KEY }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.REGISTRY_NAMESPACE }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}

      # Build et push image de d√©veloppement
      - name: Build and push DEV image
        if: github.ref == 'refs/heads/develop'
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.REGISTRY_NAMESPACE }}/${{ env.IMAGE_NAME }}:dev
          labels: ${{ steps.meta.outputs.labels }}

      # Build et push image de production (depuis un tag)
      - name: Build and push PROD image
        if: startsWith(github.ref, 'refs/tags/')
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.REGISTRY_NAMESPACE }}/${{ env.IMAGE_NAME }}:latest
            ${{ env.REGISTRY }}/${{ env.REGISTRY_NAMESPACE }}/${{ env.IMAGE_NAME }}:${{ steps.meta.outputs.version }}
          labels: ${{ steps.meta.outputs.labels }}